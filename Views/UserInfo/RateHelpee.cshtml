@model TaskDone_V2.Models.ApplicationUser

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "UserInfo", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ApplicationUser</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">

        <div class="col-md-10">
            @Html.HiddenFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        <div class="col-md-10">
            @Html.HiddenFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        <div class="col-md-10">
            @Html.HiddenFor(model => model.SocialSecurity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SocialSecurity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        <div class="col-md-10">
            @Html.HiddenFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        <div class="col-md-10">
            @Html.HiddenFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        <div class="col-md-10">
            @Html.HiddenFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        <div class="col-md-10">
            @Html.HiddenFor(model => model.StreetAddress2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StreetAddress2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        
        <div class="col-md-10">
            @Html.HiddenFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        
        <div class="col-md-10">
            @Html.HiddenFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="range-wrap">
                @{ var currentRate = Model.Rate;}
                <input type="range" name="rate" class="range" min="1" max="5">
                <output for="rate" onforminput="value = rate.valueAsNumber+@currentRate/2;"></output>

                
            </div>
            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-success" value="Rate" title="Rate this @Model.UserName " />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
